


ARM Macro Assembler    Page 1 


    1 00000000         ;*******************************************************
                       ******** 
    2 00000000         ; Andrew Groeling & Kris Alquist
    3 00000000         ; Date 12-3-2019
    4 00000000         ; Lab #9 - Simple Scheduler 
    5 00000000         ;*******************************************************
                       ******** 
    6 00000000         ; USAGE NOTES:
    7 00000000         ;    -The scheduler MUST be initialized with at least 1
    8 00000000         ;   program to work properly. (This is a result of a des
                       ign
    9 00000000         ;  choice to keep the interrupt handler's execution time
                        to
   10 00000000         ;   an absolute minimum, as maximizing the execution of 
                       other 
   11 00000000         ;  programs was considered to be the primary design goal
                       )
   12 00000000         ;    -To add a program, simply load the starting address
                       
   13 00000000         ;  into R0 an call ProcAdd. It will be added to the end 
                       of
   14 00000000         ;  the execution table
   15 00000000         ;
   16 00000000         ;*******************************************************
                       ********
   17 00000000         
   18 00000000         ;*******************************************************
                       ******** 
   19 00000000         ; EQU Directives
   20 00000000         ;*******************************************************
                       ******** 
   21 00000000 00000400 
                       Stack   EQU              0x00000400  ; Stack size
   22 00000000         ; Interupt symbols
   23 00000000 E000E010 
                       NVIC_ST_CTRL
                               EQU              0xE000E010
   24 00000000 E000E014 
                       NVIC_ST_RELOAD
                               EQU              0xE000E014
   25 00000000 E000E018 
                       NVIC_ST_CURRENT
                               EQU              0xE000E018
   26 00000000 E000ED20 
                       SHP_SYSPRI3
                               EQU              0xE000ED20
   27 00000000 003D0900 
                       RELOAD_VALUE
                               EQU              4000000     ; One second at 16 
                                                            MHz
   28 00000000         
   29 00000000         ; Use built-in LED on Port F
   30 00000000 400253FC 
                       GPIO_PORTF_DATA_R
                               EQU              0x400253FC
   31 00000000 40025400 
                       GPIO_PORTF_DIR_R
                               EQU              0x40025400
   32 00000000 40025420 



ARM Macro Assembler    Page 2 


                       GPIO_PORTF_AFSEL_R
                               EQU              0x40025420
   33 00000000 40025510 
                       GPIO_PORTF_PUR_R
                               EQU              0x40025510
   34 00000000 4002551C 
                       GPIO_PORTF_DEN_R
                               EQU              0x4002551C
   35 00000000 40025528 
                       GPIO_PORTF_AMSEL_R
                               EQU              0x40025528
   36 00000000 4002552C 
                       GPIO_PORTF_PCTL_R
                               EQU              0x4002552C
   37 00000000 400FE608 
                       SYSCTL_RCGCGPIO_R
                               EQU              0x400FE608
   38 00000000 0000FFF0 
                       PCTLCNST
                               EQU              0x0000FFF0
   39 00000000         
   40 00000000 00186A00 
                       DELAYCNTR
                               EQU              1600000     ; .1 sec at 16MHZ (
                                                            16,000,000/10)
   41 00000000 00061A80 
                       DELAYCNTRSHORT
                               EQU              DELAYCNTR/4
   42 00000000         
   43 00000000         ;*******************************************************
                       *******
   44 00000000         ; Important initialization variables
   45 00000000         ;*******************************************************
                       *******
   46 00000000 00000004 
                       tabcap  EQU              4           ;max number of prog
                                                            rams scheduled
   47 00000000 0000010A 
                       led1    EQU              Blink1      ;addresses of progr
                                                            ams
   48 00000000 0000012E 
                       led2    EQU              Blink2
   49 00000000 00000152 
                       led3    EQU              Blink4
   50 00000000 00000176 
                       led7    EQU              Blink7
   51 00000000         
   52 00000000         ;*******************************************************
                       ********
   53 00000000         ; Data Section in READWRITE
   54 00000000         ; Values of the data in this section are not properly in
                       itialazed, 
   55 00000000         ; but labels can be used in the program to change the da
                       ta values.
   56 00000000         ;*******************************************************
                       ********
   57 00000000                 AREA             |.sdata|, DATA, READWRITE
   58 00000000                 THUMB
   59 00000000 00 00 00 



ARM Macro Assembler    Page 3 


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00       exectab SPACE            4*tabcap    ;each address is 4 
                                                            bytes, so array len
                                                            gth is capacity*4
   60 00000010 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00    statetab
                               SPACE            4*8*tabcap  ;storage for contex
                                                            ts (8, 4 byte regis
                                                            ters per entry)
   61 00000090 00      tabcntr SPACE            1           ;only need 1 byte f
                                                            or pointer
   62 00000091 00      tabsize SPACE            1           ;only need 1 byte f
                                                            or size
   63 00000092         
   64 00000092         ;*******************************************************



ARM Macro Assembler    Page 4 


                       ********
   65 00000092         ; Program section                         
   66 00000092         ;*******************************************************
                       ********
   67 00000092         ;LABEL DIRECTIVE VALUE        COMMENT
   68 00000092         
   69 00000092                 AREA             |.text|, CODE, READONLY
   70 00000000                 THUMB
   71 00000000                 EXTERN           _Init_PortF
   72 00000000                 EXPORT           __main      ; Make Reset_Handle
                                                            r available to link
                                                            er
   73 00000000         __main
   74 00000000 F7FF FFFE       BL               _Init_PortF ; Call Port F Initi
                                                            alization subroutin
                                                            e.
   75 00000004 F000 F868       BL               systick_ini
   76 00000008 F000 F85C       BL               exectab_ini
   77 0000000C         
   78 0000000C 4863            LDR              R0,=led1    ; process initializ
                                                            ation section
   79 0000000E F000 F80C       BL               ProcAdd
   80 00000012 4863            LDR              R0,=led2
   81 00000014 F000 F809       BL               ProcAdd
   82 00000018 4862            LDR              R0,=led3
   83 0000001A F000 F806       BL               ProcAdd
   84 0000001E 4862            LDR              R0,=led7
   85 00000020 F000 F803       BL               ProcAdd
   86 00000024         
   87 00000024 B662            CPSIE            I           ; Turn on interrupt
                                                            s. 
   88 00000026 F000 F870       BL               Blink1
   89 0000002A         
   90 0000002A         ;*******************************************************
                       **
   91 0000002A         ; ProcAdd subroutine
   92 0000002A         ;*******************************************************
                       **
   93 0000002A         ProcAdd                              ;adds process to ex
                                                            ecution table, pass
                                                            ed by R0
   94 0000002A B51E            PUSH             {R1,R2,R3,R4,LR}
   95 0000002C 495F            LDR              R1,=tabsize ;check if execution
                                                             table is full 
   96 0000002E 780B            LDRB             R3,[R1]
   97 00000030 F04F 0204       LDR              R2,=tabcap
   98 00000034 4293            CMP              R3,R2       ;compare size and c
                                                            apacity
   99 00000036 DA22            BGE              paddend     ;if full, exit with
                                                            out adding
  100 00000038 4C5D            LDR              R4,=statetab ;load address to w
                                                            rite values to
  101 0000003A 4A5E            LDR              R2,=exectab ;load table address
                                                            
  102 0000003C EA4F 1343       LSL              R3,#5       ;multiply to use as
                                                             offset for stateta
                                                            b
  103 00000040 441C            ADD              R4,R3       ;add offset to stat
                                                            etab base address



ARM Macro Assembler    Page 5 


  104 00000042 EA4F 03D3       LSR              R3,#3       ;shift back to use 
                                                            as offset for exect
                                                            ab
  105 00000046 50D4            STR              R4,[R2,R3]  ;add relevant stack
                                                             pointer to program
                                                             to table
  106 00000048 F04F 0200       MOV              R2,#0       ;clear r2 to create
                                                             dummy processor st
                                                            ate
  107 0000004C F844 2B04       STR              R2,[R4],#4  ;dummy R0
  108 00000050 F844 2B04       STR              R2,[R4],#4  ;dummy R1
  109 00000054 F844 2B04       STR              R2,[R4],#4  ;dummy R2
  110 00000058 F844 2B04       STR              R2,[R4],#4  ;dummy R3
  111 0000005C F844 2B04       STR              R2,[R4],#4  ;dummy R12
  112 00000060 F06F 0206       LDR              R2,=0xFFFFFFF9 ;dummy LR value
  113 00000064 F844 2B04       STR              R2,[R4],#4  ;dummy LR
  114 00000068 F844 0B04       STR              R0,[R4],#4  ;push program addre
                                                            ss to stack
  115 0000006C F04F 4201       LDR              R2,=0x81000000 
                                                            ;dummy xPSR value
  116 00000070 F844 2B04       STR              R2,[R4],#4  ;push psuedo-xPSR
  117 00000074 EA4F 0393       LSR              R3,#2       ;shift offset back 
                                                            to size (faster tha
                                                            n reloading)
  118 00000078 F103 0301       ADD              R3,#1       ;increment size
  119 0000007C 700B            STRB             R3,[R1]     ;store size
  120 0000007E E8BD 401E 
                       paddend POP              {R1,R2,R3,R4,LR}
  121 00000082 4770            BX               LR
  122 00000084         
  123 00000084         ;*******************************************************
                       **
  124 00000084         ; ProcNext subroutine
  125 00000084         ;*******************************************************
                       **
  126 00000084         ProcNext                             ;cycles through exe
                                                            cution table
  127 00000084 494C            LDR              R1,=tabcntr
  128 00000086 780A            LDRB             R2,[R1]
  129 00000088 4B48            LDR              R3,=tabsize ;check if at end of
                                                             table
  130 0000008A 781B            LDRB             R3,[R3]
  131 0000008C F1A3 0301       SUB              R3,#1       ;sub 1 from the siz
                                                            e for comparison
  132 00000090 429A            CMP              R2,R3       ; /!\ set flags her
                                                            e
  133 00000092 4B48            LDR              R3,=exectab ;size no longer nee
                                                            ded, load the exect
                                                            ab pointer for R/W 
                                                            ops
  134 00000094 EA4F 0282       LSL              R2,#2
  135 00000098 F853 8002       LDR              R8,[R3,R2]  ;load address of st
                                                            atetab for next reg
                                                            ister set
  136 0000009C BCFF            POP              {R0-R7}     ;steal top 32 bytes
                                                             from stack
  137 0000009E E888 00FF       STM              R8,{R0-R7}  ;store 32 bytes in 
                                                            corresponding state
                                                            tab location



ARM Macro Assembler    Page 6 


  138 000000A2 4B44            LDR              R3,=exectab ;reload clobbered r
                                                            egisters
  139 000000A4 4944            LDR              R1,=tabcntr
  140 000000A6 780A            LDRB             R2,[R1]
  141 000000A8 F102 0201       ADD              R2,#1       ;increment table co
                                                            unter
  142 000000AC DB01            BLT              pnset       ; /!\ check flags h
                                                            ere
  143 000000AE F04F 0200       MOV              R2,#0       ;if at end of table
                                                            , reset tabcntr to 
                                                            0
  144 000000B2 700A    pnset   STRB             R2,[R1]     ;update table point
                                                            er
  145 000000B4 EA4F 0282       LSL              R2,#2
  146 000000B8 F853 8002       LDR              R8,[R3,R2]  ;load next statetab
                                                             address
  147 000000BC E898 00FF       LDM              R8,{R0-R7}  ;load next context
  148 000000C0 B4FF            PUSH             {R0-R7}     ;push to stack
  149 000000C2 4770            BX               LR
  150 000000C4         
  151 000000C4         ;*******************************************************
                       **
  152 000000C4         ; exectab_ini subroutine
  153 000000C4         ;*******************************************************
                       **
  154 000000C4         exectab_ini                          ;initializes table 
                                                            metadata
  155 000000C4 B50E            PUSH             {R1,R2,R3,LR}
  156 000000C6 4939            LDR              R1,=tabsize
  157 000000C8 4A3B            LDR              R2,=tabcntr
  158 000000CA F04F 0000       MOV              R0,#0
  159 000000CE 7008            STRB             R0,[R1]
  160 000000D0 7010            STRB             R0,[R2]
  161 000000D2 E8BD 400E       POP              {R1,R2,R3,LR}
  162 000000D6 4770            BX               LR
  163 000000D8         
  164 000000D8         ;*******************************************************
                       **
  165 000000D8         ; systick_ini subroutine
  166 000000D8         ;*******************************************************
                       **
  167 000000D8         systick_ini                          ;initialize interru
                                                            pts subroutine
  168 000000D8 B403            PUSH             {R0,R1}
  169 000000DA 4938            LDR              R1,=NVIC_ST_CTRL
  170 000000DC F04F 0000       MOV              R0,#0
  171 000000E0 6008            STR              R0,[R1]
  172 000000E2 4937            LDR              R1,=NVIC_ST_RELOAD
  173 000000E4 4837            LDR              R0,=RELOAD_VALUE
  174 000000E6 6008            STR              R0,[R1]
  175 000000E8 4937            LDR              R1,=NVIC_ST_CURRENT
  176 000000EA 6008            STR              R0,[R1]
  177 000000EC 4937            LDR              R1,=SHP_SYSPRI3
  178 000000EE F04F 4080       LDR              R0,=0X40000000
  179 000000F2 6008            STR              R0,[R1]
  180 000000F4 4931            LDR              R1,=NVIC_ST_CTRL
  181 000000F6 F04F 0003       MOV              R0,#0x03
  182 000000FA 6008            STR              R0,[R1]
  183 000000FC BC03            POP              {R0,R1}



ARM Macro Assembler    Page 7 


  184 000000FE 4770            BX               LR
  185 00000100         
  186 00000100         ;*******************************************************
                       **
  187 00000100         ; SysTick ISR
  188 00000100         ;*******************************************************
                       **
  189 00000100         ; Interrupt Service routine
  190 00000100         ; This gets called every 1 s (determined by interrupt se
                       tup)
  191 00000100                 EXPORT           SysTick_Handler
  192 00000100         SysTick_Handler
  193 00000100 46F2            MOV              R10,LR      ;move LR to call pr
                                                            ocnext
  194 00000102 F7FF FFBF       BL               ProcNext    ;swaps top 32 bytes
                                                             of stack
  195 00000106 46D6            MOV              LR,R10      ;restore
  196 00000108 4770            BX               LR
  197 0000010A         
  198 0000010A         ;*******************************************************
                       
  199 0000010A         ; Blink program section
  200 0000010A         ;  (written as separate programs instead of 1 
  201 0000010A         ;   with args for demonstration purposes)
  202 0000010A         ;*******************************************************
                       
  203 0000010A         
  204 0000010A         Blink1
  205 0000010A 4831            LDR              R0,=GPIO_PORTF_DATA_R
  206 0000010C F04F 0102       MOV              R1,#0x02    ;initialize values
  207 00000110 F04F 0200       MOV              R2,#0x00
  208 00000114 4B2F    bloop1  LDR              R3,=DELAYCNTRSHORT ;set delay t
                                                            o a brief time
  209 00000116 6001            STR              R1,[R0]     ;turn led on
  210 00000118 F1A3 0301 
                       bon1    SUB              R3,#1       ;count down once
  211 0000011C 2B00            CMP              R3,#0
  212 0000011E D1FB            BNE              bon1        ;if not 0, count do
                                                            wn 1 more
  213 00000120 6002            STR              R2,[R0]     ;else, turn led off
                                                            
  214 00000122 4B2D            LDR              R3,=DELAYCNTR ;reset counter
  215 00000124 F1A3 0301 
                       boff1   SUB              R3,#1       ;count down once
  216 00000128 2B00            CMP              R3,#0
  217 0000012A D0F3            BEQ              bloop1      ;if 0, start over a
                                                            gain
  218 0000012C E7FA            B                boff1       ;else count down ag
                                                            ain
  219 0000012E         
  220 0000012E         
  221 0000012E         ;*******************************************************
                       *********
  222 0000012E         
  223 0000012E         Blink2
  224 0000012E 4828            LDR              R0,=GPIO_PORTF_DATA_R
  225 00000130 F04F 0104       MOV              R1,#0x04    ;initialize values
  226 00000134 F04F 0200       MOV              R2,#0x00
  227 00000138 4B26    bloop2  LDR              R3,=DELAYCNTRSHORT ;set delay t



ARM Macro Assembler    Page 8 


                                                            o a brief time
  228 0000013A 6001            STR              R1,[R0]     ;turn led on
  229 0000013C F1A3 0301 
                       bon2    SUB              R3,#1       ;count down once
  230 00000140 2B00            CMP              R3,#0
  231 00000142 D1FB            BNE              bon2        ;if not 0, count do
                                                            wn 1 more
  232 00000144 6002            STR              R2,[R0]     ;else, turn led off
                                                            
  233 00000146 4B24            LDR              R3,=DELAYCNTR ;reset counter
  234 00000148 F1A3 0301 
                       boff2   SUB              R3,#1       ;count down once
  235 0000014C 2B00            CMP              R3,#0
  236 0000014E D0F3            BEQ              bloop2      ;if 0, start over a
                                                            gain
  237 00000150 E7FA            B                boff2       ;else count down ag
                                                            ain
  238 00000152         
  239 00000152         
  240 00000152         ;*******************************************************
                       *********
  241 00000152         
  242 00000152         Blink4
  243 00000152 481F            LDR              R0,=GPIO_PORTF_DATA_R
  244 00000154 F04F 0108       MOV              R1,#0x08    ;initialize values
  245 00000158 F04F 0200       MOV              R2,#0x00
  246 0000015C 4B1D    bloop4  LDR              R3,=DELAYCNTRSHORT ;set delay t
                                                            o a brief time
  247 0000015E 6001            STR              R1,[R0]     ;turn led on
  248 00000160 F1A3 0301 
                       bon4    SUB              R3,#1       ;count down once
  249 00000164 2B00            CMP              R3,#0
  250 00000166 D1FB            BNE              bon4        ;if not 0, count do
                                                            wn 1 more
  251 00000168 6002            STR              R2,[R0]     ;else, turn led off
                                                            
  252 0000016A 4B1B            LDR              R3,=DELAYCNTR ;reset counter
  253 0000016C F1A3 0301 
                       boff4   SUB              R3,#1       ;count down once
  254 00000170 2B00            CMP              R3,#0
  255 00000172 D0F3            BEQ              bloop4      ;if 0, start over a
                                                            gain
  256 00000174 E7FA            B                boff4       ;else count down ag
                                                            ain
  257 00000176         
  258 00000176         ;*******************************************************
                       *********
  259 00000176         
  260 00000176         Blink7
  261 00000176 4816            LDR              R0,=GPIO_PORTF_DATA_R
  262 00000178 F04F 010E       MOV              R1,#0x0E    ;initialize values
  263 0000017C F04F 0200       MOV              R2,#0x00
  264 00000180 4B14    bloop7  LDR              R3,=DELAYCNTRSHORT ;set delay t
                                                            o a brief time
  265 00000182 6001            STR              R1,[R0]     ;turn led on
  266 00000184 F1A3 0301 
                       bon7    SUB              R3,#1       ;count down once
  267 00000188 2B00            CMP              R3,#0
  268 0000018A D1FB            BNE              bon7        ;if not 0, count do



ARM Macro Assembler    Page 9 


                                                            wn 1 more
  269 0000018C 6002            STR              R2,[R0]     ;else, turn led off
                                                            
  270 0000018E 4B12            LDR              R3,=DELAYCNTR ;reset counter
  271 00000190 F1A3 0301 
                       boff7   SUB              R3,#1       ;count down once
  272 00000194 2B00            CMP              R3,#0
  273 00000196 D0F3            BEQ              bloop7      ;if 0, start over a
                                                            gain
  274 00000198 E7FA            B                boff7       ;else count down ag
                                                            ain
  275 0000019A         ;*******************************************************
                       ********
  276 0000019A         ; End of the program  section
  277 0000019A         ;*******************************************************
                       ********
  278 0000019A 00 00           ALIGN
  279 0000019C                 END
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              E000E010 
              E000E014 
              003D0900 
              E000E018 
              E000ED20 
              400253FC 
              00061A80 
              00186A00 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\lab9.d -o.\lab9.o -I.\RTE\_Target_1 -IC:\Keil_v5\ARM\PACK\Kei
l\TM4C_DFP\1.1.0\Device\Include\TM4C123 -IC:\Keil_v5\ARM\CMSIS\Include --predef
ine="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 525" --predefine="TM4C1
23GH6PM SETA 1" --list=.\lab9.lst lab9.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.sdata 00000000

Symbol: .sdata
   Definitions
      At line 57 in file lab9.s
   Uses
      None
Comment: .sdata unused
exectab 00000000

Symbol: exectab
   Definitions
      At line 59 in file lab9.s
   Uses
      At line 101 in file lab9.s
      At line 133 in file lab9.s
      At line 138 in file lab9.s

statetab 00000010

Symbol: statetab
   Definitions
      At line 60 in file lab9.s
   Uses
      At line 100 in file lab9.s
Comment: statetab used once
tabcntr 00000090

Symbol: tabcntr
   Definitions
      At line 61 in file lab9.s
   Uses
      At line 127 in file lab9.s
      At line 139 in file lab9.s
      At line 157 in file lab9.s

tabsize 00000091

Symbol: tabsize
   Definitions
      At line 62 in file lab9.s
   Uses
      At line 95 in file lab9.s
      At line 129 in file lab9.s
      At line 156 in file lab9.s

5 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 69 in file lab9.s
   Uses
      None
Comment: .text unused
Blink1 0000010A

Symbol: Blink1
   Definitions
      At line 204 in file lab9.s
   Uses
      At line 47 in file lab9.s
      At line 88 in file lab9.s

Blink2 0000012E

Symbol: Blink2
   Definitions
      At line 223 in file lab9.s
   Uses
      At line 48 in file lab9.s
Comment: Blink2 used once
Blink4 00000152

Symbol: Blink4
   Definitions
      At line 242 in file lab9.s
   Uses
      At line 49 in file lab9.s
Comment: Blink4 used once
Blink7 00000176

Symbol: Blink7
   Definitions
      At line 260 in file lab9.s
   Uses
      At line 50 in file lab9.s
Comment: Blink7 used once
ProcAdd 0000002A

Symbol: ProcAdd
   Definitions
      At line 93 in file lab9.s
   Uses
      At line 79 in file lab9.s
      At line 81 in file lab9.s
      At line 83 in file lab9.s
      At line 85 in file lab9.s

ProcNext 00000084

Symbol: ProcNext
   Definitions
      At line 126 in file lab9.s
   Uses
      At line 194 in file lab9.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Comment: ProcNext used once
SysTick_Handler 00000100

Symbol: SysTick_Handler
   Definitions
      At line 192 in file lab9.s
   Uses
      At line 191 in file lab9.s
Comment: SysTick_Handler used once
__main 00000000

Symbol: __main
   Definitions
      At line 73 in file lab9.s
   Uses
      At line 72 in file lab9.s
Comment: __main used once
bloop1 00000114

Symbol: bloop1
   Definitions
      At line 208 in file lab9.s
   Uses
      At line 217 in file lab9.s
Comment: bloop1 used once
bloop2 00000138

Symbol: bloop2
   Definitions
      At line 227 in file lab9.s
   Uses
      At line 236 in file lab9.s
Comment: bloop2 used once
bloop4 0000015C

Symbol: bloop4
   Definitions
      At line 246 in file lab9.s
   Uses
      At line 255 in file lab9.s
Comment: bloop4 used once
bloop7 00000180

Symbol: bloop7
   Definitions
      At line 264 in file lab9.s
   Uses
      At line 273 in file lab9.s
Comment: bloop7 used once
boff1 00000124

Symbol: boff1
   Definitions
      At line 215 in file lab9.s
   Uses
      At line 218 in file lab9.s
Comment: boff1 used once
boff2 00000148




ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

Symbol: boff2
   Definitions
      At line 234 in file lab9.s
   Uses
      At line 237 in file lab9.s
Comment: boff2 used once
boff4 0000016C

Symbol: boff4
   Definitions
      At line 253 in file lab9.s
   Uses
      At line 256 in file lab9.s
Comment: boff4 used once
boff7 00000190

Symbol: boff7
   Definitions
      At line 271 in file lab9.s
   Uses
      At line 274 in file lab9.s
Comment: boff7 used once
bon1 00000118

Symbol: bon1
   Definitions
      At line 210 in file lab9.s
   Uses
      At line 212 in file lab9.s
Comment: bon1 used once
bon2 0000013C

Symbol: bon2
   Definitions
      At line 229 in file lab9.s
   Uses
      At line 231 in file lab9.s
Comment: bon2 used once
bon4 00000160

Symbol: bon4
   Definitions
      At line 248 in file lab9.s
   Uses
      At line 250 in file lab9.s
Comment: bon4 used once
bon7 00000184

Symbol: bon7
   Definitions
      At line 266 in file lab9.s
   Uses
      At line 268 in file lab9.s
Comment: bon7 used once
exectab_ini 000000C4

Symbol: exectab_ini
   Definitions
      At line 154 in file lab9.s



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols

   Uses
      At line 76 in file lab9.s
Comment: exectab_ini used once
led1 0000010A

Symbol: led1
   Definitions
      At line 47 in file lab9.s
   Uses
      At line 78 in file lab9.s
Comment: led1 used once
led2 0000012E

Symbol: led2
   Definitions
      At line 48 in file lab9.s
   Uses
      At line 80 in file lab9.s
Comment: led2 used once
led3 00000152

Symbol: led3
   Definitions
      At line 49 in file lab9.s
   Uses
      At line 82 in file lab9.s
Comment: led3 used once
led7 00000176

Symbol: led7
   Definitions
      At line 50 in file lab9.s
   Uses
      At line 84 in file lab9.s
Comment: led7 used once
paddend 0000007E

Symbol: paddend
   Definitions
      At line 120 in file lab9.s
   Uses
      At line 99 in file lab9.s
Comment: paddend used once
pnset 000000B2

Symbol: pnset
   Definitions
      At line 144 in file lab9.s
   Uses
      At line 142 in file lab9.s
Comment: pnset used once
systick_ini 000000D8

Symbol: systick_ini
   Definitions
      At line 167 in file lab9.s
   Uses
      At line 75 in file lab9.s
Comment: systick_ini used once



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Relocatable symbols

29 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

DELAYCNTR 00186A00

Symbol: DELAYCNTR
   Definitions
      At line 40 in file lab9.s
   Uses
      At line 41 in file lab9.s
      At line 214 in file lab9.s
      At line 233 in file lab9.s
      At line 252 in file lab9.s
      At line 270 in file lab9.s

DELAYCNTRSHORT 00061A80

Symbol: DELAYCNTRSHORT
   Definitions
      At line 41 in file lab9.s
   Uses
      At line 208 in file lab9.s
      At line 227 in file lab9.s
      At line 246 in file lab9.s
      At line 264 in file lab9.s

GPIO_PORTF_AFSEL_R 40025420

Symbol: GPIO_PORTF_AFSEL_R
   Definitions
      At line 32 in file lab9.s
   Uses
      None
Comment: GPIO_PORTF_AFSEL_R unused
GPIO_PORTF_AMSEL_R 40025528

Symbol: GPIO_PORTF_AMSEL_R
   Definitions
      At line 35 in file lab9.s
   Uses
      None
Comment: GPIO_PORTF_AMSEL_R unused
GPIO_PORTF_DATA_R 400253FC

Symbol: GPIO_PORTF_DATA_R
   Definitions
      At line 30 in file lab9.s
   Uses
      At line 205 in file lab9.s
      At line 224 in file lab9.s
      At line 243 in file lab9.s
      At line 261 in file lab9.s

GPIO_PORTF_DEN_R 4002551C

Symbol: GPIO_PORTF_DEN_R
   Definitions
      At line 34 in file lab9.s
   Uses
      None
Comment: GPIO_PORTF_DEN_R unused
GPIO_PORTF_DIR_R 40025400



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols


Symbol: GPIO_PORTF_DIR_R
   Definitions
      At line 31 in file lab9.s
   Uses
      None
Comment: GPIO_PORTF_DIR_R unused
GPIO_PORTF_PCTL_R 4002552C

Symbol: GPIO_PORTF_PCTL_R
   Definitions
      At line 36 in file lab9.s
   Uses
      None
Comment: GPIO_PORTF_PCTL_R unused
GPIO_PORTF_PUR_R 40025510

Symbol: GPIO_PORTF_PUR_R
   Definitions
      At line 33 in file lab9.s
   Uses
      None
Comment: GPIO_PORTF_PUR_R unused
NVIC_ST_CTRL E000E010

Symbol: NVIC_ST_CTRL
   Definitions
      At line 23 in file lab9.s
   Uses
      At line 169 in file lab9.s
      At line 180 in file lab9.s

NVIC_ST_CURRENT E000E018

Symbol: NVIC_ST_CURRENT
   Definitions
      At line 25 in file lab9.s
   Uses
      At line 175 in file lab9.s
Comment: NVIC_ST_CURRENT used once
NVIC_ST_RELOAD E000E014

Symbol: NVIC_ST_RELOAD
   Definitions
      At line 24 in file lab9.s
   Uses
      At line 172 in file lab9.s
Comment: NVIC_ST_RELOAD used once
PCTLCNST 0000FFF0

Symbol: PCTLCNST
   Definitions
      At line 38 in file lab9.s
   Uses
      None
Comment: PCTLCNST unused
RELOAD_VALUE 003D0900

Symbol: RELOAD_VALUE



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 27 in file lab9.s
   Uses
      At line 173 in file lab9.s
Comment: RELOAD_VALUE used once
SHP_SYSPRI3 E000ED20

Symbol: SHP_SYSPRI3
   Definitions
      At line 26 in file lab9.s
   Uses
      At line 177 in file lab9.s
Comment: SHP_SYSPRI3 used once
SYSCTL_RCGCGPIO_R 400FE608

Symbol: SYSCTL_RCGCGPIO_R
   Definitions
      At line 37 in file lab9.s
   Uses
      None
Comment: SYSCTL_RCGCGPIO_R unused
Stack 00000400

Symbol: Stack
   Definitions
      At line 21 in file lab9.s
   Uses
      None
Comment: Stack unused
tabcap 00000004

Symbol: tabcap
   Definitions
      At line 46 in file lab9.s
   Uses
      At line 59 in file lab9.s
      At line 60 in file lab9.s
      At line 97 in file lab9.s

18 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

_Init_PortF 00000000

Symbol: _Init_PortF
   Definitions
      At line 71 in file lab9.s
   Uses
      At line 74 in file lab9.s
Comment: _Init_PortF used once
1 symbol
389 symbols in table
